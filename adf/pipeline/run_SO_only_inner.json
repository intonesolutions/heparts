{
	"name": "run_SO_only_inner",
	"properties": {
		"activities": [
			{
				"name": "call pass1",
				"type": "AzureFunctionActivity",
				"dependsOn": [
					{
						"activity": "call pass_0-so",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"functionName": "HttpTrigger1",
					"method": "POST",
					"body": {
						"pass": "1"
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureFunction1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "opportunity_to_sf",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "call pass1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "SalesforceSink",
						"writeBatchSize": 5000,
						"writeBehavior": "upsert",
						"externalIdFieldName": "Morgan_External_ID__c",
						"ignoreNullValues": true
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true
				},
				"inputs": [
					{
						"referenceName": "blob_json",
						"type": "DatasetReference",
						"parameters": {
							"folder": "stage",
							"filename": "opportunity.json"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "salesforce_OBJ",
						"type": "DatasetReference",
						"parameters": {
							"objName": "Opportunity"
						}
					}
				]
			},
			{
				"name": "call pass2",
				"type": "AzureFunctionActivity",
				"dependsOn": [
					{
						"activity": "get inv from sf",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "get Opp from sf",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"functionName": "HttpTrigger1",
					"method": "POST",
					"body": {
						"pass": "2"
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureFunction1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "OppLine_upsert",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "call pass2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "SalesforceSink",
						"writeBatchSize": 5000,
						"writeBehavior": "upsert",
						"externalIdFieldName": "External_ID__c",
						"ignoreNullValues": true
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$"
								}
							}
						],
						"collectionReference": ""
					}
				},
				"inputs": [
					{
						"referenceName": "blob_json",
						"type": "DatasetReference",
						"parameters": {
							"folder": "stage",
							"filename": "opportunity_line_upsert.json"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "salesforce_OBJ",
						"type": "DatasetReference",
						"parameters": {
							"objName": "OpportunityLineItem"
						}
					}
				]
			},
			{
				"name": "get Prod and Pricebook",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "getProdKeys",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SalesforceSource",
						"query": {
							"value": "@concat('select Id,Product2.Id,Product2.Product_Key__c,CurrencyIsoCode from PriceBookEntry where IsActive=true and Product2.Product_Key__c in (',activity('getProdKeys').output.firstRow.keys,')')",
							"type": "Expression"
						},
						"readBehavior": "query"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true
				},
				"inputs": [
					{
						"referenceName": "salesforce_OBJ",
						"type": "DatasetReference",
						"parameters": {
							"objName": "Product2"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "blob_csv",
						"type": "DatasetReference",
						"parameters": {
							"folder": "stage",
							"filename": "productpricebook.csv"
						}
					}
				]
			},
			{
				"name": "getProdKeys",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "opportunity_to_sf",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "invoice_to_sf",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"enablePartitionDiscovery": false
						}
					},
					"dataset": {
						"referenceName": "blob_json",
						"type": "DatasetReference",
						"parameters": {
							"folder": "stage",
							"filename": "salesorder_prodkeys.json"
						}
					}
				}
			},
			{
				"name": "invoice_to_sf",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "call pass1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "SalesforceSink",
						"writeBatchSize": 5000,
						"writeBehavior": "upsert",
						"externalIdFieldName": "Crown_Invoice__c",
						"ignoreNullValues": true
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "blob_json",
						"type": "DatasetReference",
						"parameters": {
							"folder": "stage",
							"filename": "invoices.json"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "salesforce_OBJ",
						"type": "DatasetReference",
						"parameters": {
							"objName": "Invoices_Crown__c"
						}
					}
				]
			},
			{
				"name": "get inv from sf",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "get Prod and Pricebook",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SalesforceSource",
						"query": "select Id,External_ID__c from Invoices_Crown__c",
						"readBehavior": "query"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"quoteAllText": true
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "salesforce_OBJ",
						"type": "DatasetReference",
						"parameters": {
							"objName": "Invoices_Crown__c"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "blob_json",
						"type": "DatasetReference",
						"parameters": {
							"folder": "intake",
							"filename": "invoices.json"
						}
					}
				]
			},
			{
				"name": "invLine_upsert",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "call pass2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "SalesforceSink",
						"writeBatchSize": 5000,
						"writeBehavior": "upsert",
						"externalIdFieldName": "External_ID__c",
						"ignoreNullValues": true
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['RecordTypeId']"
								},
								"sink": {
									"name": "RecordTypeId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['External_ID__c']"
								},
								"sink": {
									"name": "External_ID__c",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Invoices_Crown__c']"
								},
								"sink": {
									"name": "Invoices_Crown__c",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Product__c']"
								},
								"sink": {
									"name": "Product__c",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Stock_Code__c']"
								},
								"sink": {
									"name": "Stock_Code__c",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Product_Class__c']"
								},
								"sink": {
									"name": "Product_Class__c",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['B_O_Suffix__c']"
								},
								"sink": {
									"name": "B_O_Suffix__c",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Morgan_Line__c']"
								},
								"sink": {
									"name": "Morgan_Line__c",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Quantity__c']"
								},
								"sink": {
									"name": "Quantity__c",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "$['Quantity_B_O__c']"
								},
								"sink": {
									"name": "Quantity_B_O__c",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "$['Quantity_Shipped__c']"
								},
								"sink": {
									"name": "Quantity_Shipped__c",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "$['Total_Amount__c']"
								},
								"sink": {
									"name": "Total_Amount__c",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "$['Price_per_Part__c']"
								},
								"sink": {
									"name": "Price_per_Part__c",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "$['H_E_Partner__c']"
								},
								"sink": {
									"name": "H_E_Partner__c",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['CurrencyIsoCode']"
								},
								"sink": {
									"name": "CurrencyIsoCode",
									"type": "String"
								}
							}
						],
						"collectionReference": ""
					}
				},
				"inputs": [
					{
						"referenceName": "blob_json",
						"type": "DatasetReference",
						"parameters": {
							"folder": "stage",
							"filename": "invoice_lines.json"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "salesforce_OBJ",
						"type": "DatasetReference",
						"parameters": {
							"objName": "Invoice_Line_Item_Crown__c"
						}
					}
				]
			},
			{
				"name": "getOppKeys",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "invoice_to_sf",
						"dependencyConditions": [
							"Completed"
						]
					},
					{
						"activity": "opportunity_to_sf",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"enablePartitionDiscovery": false
						}
					},
					"dataset": {
						"referenceName": "blob_json",
						"type": "DatasetReference",
						"parameters": {
							"folder": "stage",
							"filename": "opportunity_keys.json"
						}
					}
				}
			},
			{
				"name": "get Opp from sf",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "getOppKeys",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SalesforceSource",
						"query": {
							"value": "@concat('select Id,Name from Opportunity where Crown_Quote_ID__c in (',activity('getOppKeys').output.firstRow.keys,')')",
							"type": "Expression"
						},
						"readBehavior": "query"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"quoteAllText": true
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "salesforce_OBJ",
						"type": "DatasetReference",
						"parameters": {
							"objName": "Opportunity"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "blob_json",
						"type": "DatasetReference",
						"parameters": {
							"folder": "intake",
							"filename": "opps_head.json"
						}
					}
				]
			},
			{
				"name": "call pass_0-so",
				"type": "AzureFunctionActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"functionName": "HttpTrigger1",
					"method": "POST",
					"body": {
						"pass": "0-so"
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureFunction1",
					"type": "LinkedServiceReference"
				}
			}
		],
		"folder": {
			"name": "Pronto_SF"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}